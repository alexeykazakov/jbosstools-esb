<projects>	
	<project>
		<category>ESB for JBoss Enterprise SOA Platform 5.0</category>
		<name>helloworld</name>
		<included-projects>	helloworld,helloworld_testclient </included-projects>
		<shortDescription>JBoss ESB HelloWorld Example - ESB</shortDescription>
		<description>This example is to prove that the ESB is is properly configured and happy. 
As well as to demonstrate the needed  minimal files to make a basic ESB component execute. 
Example requires a JBoss Enterprise SOA Platform 5.x runtime.</description>
		<size>1101025</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/helloworld_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.50, org.jboss.ide.eclipse.as.runtime.51</property>
				<property name="eclipse-projects">helloworld,helloworld_testclient</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 5.0 and the runtime name should be "jboss-soa-p.5.0 Runtime"</property>
			</fix>
		</fixes>
	</project>	
	
	<project>
		<category>ESB for JBoss Enterprise SOA Platform 5.0</category>
		<name>helloworld_action</name>
		<included-projects>helloworld_action,helloworld_action_client </included-projects>
		<shortDescription>JBoss ESB HelloWorld Action Example - ESB</shortDescription>
		<description>This sample is to demonstrate the use of multiple action invocations from a single configuration. You can use
  a single Action class and make multiple method calls or use multiple Action
  classes. Example requires a JBoss Enterprise SOA Platform 5.x runtime.</description>
		<size>26261</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/helloworld_action_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.50, org.jboss.ide.eclipse.as.runtime.51</property>
				<property name="eclipse-projects">helloworld_action,helloworld_action_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 5.0 and the runtime name should be "jboss-soa-p.5.0 Runtime"</property>
			</fix>
		</fixes>
	</project>
	
	<project>
		<category>ESB for JBoss Enterprise SOA Platform 5.0</category>
		<name>helloworld_file_action</name>		
		<included-projects>helloworld_file_action,helloworld_file_action_client</included-projects>
		<shortDescription>JBoss ESB HelloWorld File Action Example - ESB</shortDescription>
		<description>This is a basic example of using the File gateway feature of the JBoss ESB.
 Files that are found in a particular directory with a particular extension
  are sent to a JMS queue with actions for processing. Before deploy the project, 
  please change some properties according to the readme.txt file. Example requires a 
  SOA-P 5.x runtime.</description>
		<size>16505</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/helloworld_file_action_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.50, org.jboss.ide.eclipse.as.runtime.51</property>
				<property name="eclipse-projects">helloworld_file_action, helloworld_file_action_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 5.0 and the runtime name should be "jboss-soa-p.5.0 Runtime"</property>
			</fix>
		</fixes>
	</project>	
	
	<project>
		<category>ESB for JBoss Enterprise SOA Platform 5.0</category>
		<name>webservice_consumer1</name>		
		<included-projects>webservice_consumer1,webservice_consumer1_client</included-projects>
		<shortDescription>JBoss ESB Web Service consumer1 Example</shortDescription>
		<description>This example demonstrates how to consume a 181 Web Service in an ESB action.
    This ESB will make a webservice request that requires a single "toWhom" string parameter.
    The webservice will return a greeting response. The ESB simply dislays the response on the 
    console. Example requires a JBoss Enterprise SOA Platform 5.x runtime.</description>
		<size>1120499</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/webservice_consumer1_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.50, org.jboss.ide.eclipse.as.runtime.51</property>
				<property name="eclipse-projects">webservice_consumer1,webservice_consumer1_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 5.0 and the runtime name should be "jboss-soa-p.5.0 Runtime"</property>
			</fix>
		</fixes>
	</project>


	<project>
		<category>ESB for JBoss Enterprise SOA Platform 5.0</category>
		<name>webservice_producer</name>		
		<included-projects>webservice_producer,webservice_producer_client</included-projects>
		<shortDescription>JBoss ESB Web Service producer Example</shortDescription>
		<description>This sample demonstrates how to deploy a JSR181 Webservice endpoint on
  JBossESB using the SOAPProcessor action. Example requires a JBoss Enterprise SOA Platform 5.x runtime.</description>
		<size>55269</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/webservice_producer_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.50, org.jboss.ide.eclipse.as.runtime.51</property>
				<property name="eclipse-projects">webservice_producer, webservice_producer_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 5.0 and the runtime name should be "jboss-soa-p.5.0 Runtime"</property>
			</fix>
		</fixes>
	</project>


	<project>
		<category>ESB for JBoss Enterprise SOA Platform 5.0</category>
		<name>transform_CSV2XML</name>
		<included-projects>transform_CSV2XML,transform_CSV2XML_client</included-projects>		
		<shortDescription>JBoss ESB Smooks CSV->XML Example</shortDescription>
		<description>This sample demonstrates how to transform a comma separated value (CSV) file to an xml.
  The tranformation is done by configuring Smooks and performing two transformation, one
  transformation from CSV to an intermediate xml format, and a second transformation from 
  the intermediate xml format to the target xml. Example requires a JBoss Enterprise SOA Platform 5.x runtime.</description>
		<size>19434</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_CSV2XML_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.50, org.jboss.ide.eclipse.as.runtime.51</property>
				<property name="eclipse-projects">transform_CSV2XML,transform_CSV2XML_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 5.0 and the runtime name should be "jboss-soa-p.5.0 Runtime"</property>
			</fix>
		</fixes>
	</project>

	<project>
		<category>ESB for JBoss Enterprise SOA Platform 5.0</category>
		<name>transform_XML2POJO</name>
		<included-projects>transform_XML2POJO,transform_XML2POJO_client</included-projects>				
		<shortDescription>JBoss ESB Smooks XML->POJO Example</shortDescription>
		<description>The purpose of the simple_transformation sample is to illustrate the
use of Smooks performing a simple transformation by converting a XML file into
Java POJOs. Example requires a JBoss Enterprise SOA Platform 5.x runtime.</description>
		<size>40936</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_XML2POJO_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.50, org.jboss.ide.eclipse.as.runtime.51</property>
				<property name="eclipse-projects">transform_XML2POJO,transform_XML2POJO_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 5.0 and the runtime name should be "jboss-soa-p.5.0 Runtime"</property>
			</fix>
		</fixes>
	</project>

	<project>
		<category>ESB for JBoss Enterprise SOA Platform 5.0</category>
		<name>transform_XML2XML_date_manipulation</name>
		<included-projects>transform_XML2XML_date_manipulation,transform_XML2XML_date_manipulation_client</included-projects>						
		<shortDescription>JBoss ESB Smooks XML->XML date-manipulation Example</shortDescription>
		<description>This is another simple sample of how to manually define and apply a Message
  Transformation within JBoss ESB. Example requires a JBoss Enterprise SOA Platform 5.x runtime.   

  This sample is an extension of the "transformation_XML2XML_simple"
  Quickstart, demonstrating how  JBoss ESB Transformations can simplify your
  XSLT transformations by combining the power of XSLT with Java.  In this
  Quickstart, we use Java to perform the ugly string manipulation on the
  SampleOrder date field (see OrderDate.java) and use XSLT for what it's good at
  i.e. Templating.  Again, the transformed SampleOrder.xml message is just
  printed to the Java console (message before and after).</description>
		<size>22071</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_XML2XML_date_manipulation_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.50, org.jboss.ide.eclipse.as.runtime.51</property>
				<property name="eclipse-projects">transform_XML2XML_date_manipulation,transform_XML2XML_date_manipulation_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 5.0 and the runtime name should be "jboss-soa-p.5.0 Runtime"</property>
			</fix>
		</fixes>
	</project>

	<project>
		<category>ESB for JBoss Enterprise SOA Platform 5.0</category>
		<name>transform_XML2XML_simple</name>
		<included-projects>transform_XML2XML_simple,transform_XML2XML_simple_client</included-projects>								
		<shortDescription>JBoss ESB Smooks XML->XML Example</shortDescription>
		<description>This is a very basic sample of how to manually define and apply a Message
  Transformation within JBoss ESB.  It applies a very simple XSLT to a
  SampleOrder.xml message and prints the before and after XML to the console.
  Example requires a JBoss Enterprise SOA Platform 5.x runtime.</description>
		<size>19224</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example-soa-p5.0/transform_XML2XML_simple_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.50, org.jboss.ide.eclipse.as.runtime.51</property>
				<property name="eclipse-projects">transform_XML2XML_simple, transform_XML2XML_simple_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 5.0 and the runtime name should be "jboss-soa-p.5.0 Runtime"</property>
			</fix>
		</fixes>
	</project>
	
	<project>
		<category>ESB for JBoss Enterprise SOA Platform 4.3</category>
		<name>helloworld</name>
		<included-projects>	helloworld,helloworld_testclient </included-projects>
		<shortDescription>JBoss ESB HelloWorld Example - ESB</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is a runtime named "jboss-soa-p.4.3.0 Runtime" in the workspace.
		This example is to prove that the ESB is is properly configured and happy.  
As well as to demonstrate the needed  minimal files to make a basic ESB component execute.</description>
		<size>1087454</size>

		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example/helloworld_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.43</property>
				<property name="eclipse-projects">helloworld, helloworld_testclient</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 4.3.0 and the runtime name should be "jboss-soa-p.4.3.0 Runtime"</property>
			</fix>
		</fixes>
	</project>	
	
	<project>
		<category>ESB for JBoss Enterprise SOA Platform 4.3</category>
		<name>helloworld_action</name>
		<included-projects>helloworld_action,helloworld_action_client </included-projects>		
		<shortDescription>JBoss ESB HelloWorld Action Example - ESB</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is a runtime named "jboss-soa-p.4.3.0 Runtime" in the workspace.
		This example is to demonstrate the use of multiple action invocations from a single configuration.  You can use  a single Action class and make multiple method calls or use multiple Action
  classes.</description>
		<size>24456</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example/helloworld_action_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.43</property>
				<property name="eclipse-projects">helloworld_action, helloworld_action_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 4.3.0 and the runtime name should be "jboss-soa-p.4.3.0 Runtime"</property>
			</fix>
		</fixes>

	</project>
	
	<project>
		<category>ESB for JBoss Enterprise SOA Platform 4.3</category>
		<name>helloworld_file_action</name>
		<included-projects>helloworld_file_action,helloworld_file_action_client </included-projects>		
		<shortDescription>JBoss ESB HelloWorld File Action Example - ESB</shortDescription>

		<description>NOTE: Before import this example, please make sure that there is a runtime named "jboss-soa-p.4.3.0 Runtime" in the workspace.
		This is a basic example of using the File gateway feature of the JBoss ESB.
  Files that are found in a particular directory with a particular extension
  are sent to a JMS queue with actions for processing. Before deploy the project, please change some properties according to the readme.txt file.</description>
		<size>15140</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example/helloworld_file_action_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.43</property>
				<property name="eclipse-projects">helloworld_file_action, helloworld_file_action_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 4.3.0 and the runtime name should be "jboss-soa-p.4.3.0 Runtime"</property>
			</fix>
		</fixes>
	</project>	
	
	<project>
		<category>ESB for JBoss Enterprise SOA Platform 4.3</category>
		<name>webservice_consumer1</name>
		<included-projects>webservice_consumer1,webservice_consumer1_client </included-projects>				
		<shortDescription>JBoss ESB Web Service consumer1 Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is a runtime named "jboss-soa-p.4.3.0 Runtime" in the workspace.
		This example demonstrates how to consume a 181 Web Service in an ESB action.
    This ESB will make a webservice request that requires a single "toWhom" string parameter.
    The webservice will return a greeting response. The ESB simply displays the response on the console.
    </description>
		<size>1094434</size>

		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example/webservice_consumer1_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.43</property>
				<property name="eclipse-projects">webservice_consumer1,webservice_consumer1_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 4.3.0 and the runtime name should be "jboss-soa-p.4.3.0 Runtime"</property>
			</fix>
		</fixes>
	</project>

	<project>
		<category>ESB for JBoss Enterprise SOA Platform 4.3</category>
		<name>webservice_producer</name>
		<included-projects>webservice_producer,webservice_producer_client </included-projects>						
		<shortDescription>JBoss ESB Web Service producer Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is a runtime named "jboss-soa-p.4.3.0 Runtime" in the workspace.
		This sample demonstrates how to deploy a JSR181 Webservice endpoint on
  JBossESB using the SOAPProcessor action.</description>
		<size>52601</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example/webservice_producer_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.43</property>
				<property name="eclipse-projects">webservice_producer, webservice_producer_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 4.3.0 and the runtime name should be "jboss-soa-p.4.3.0 Runtime"</property>
			</fix>
		</fixes>

	</project>

	<project>
		<category>ESB for JBoss Enterprise SOA Platform 4.3</category>
		<name>transform_CSV2XML</name>
		<included-projects>transform_CSV2XML,transform_CSV2XML_client </included-projects>						
		<shortDescription>JBoss ESB Smooks CSV->XML Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is a runtime named "jboss-soa-p.4.3.0 Runtime" in the workspace.
		This sample demonstrates how to transform a comma separated value (CSV) file to an xml.
  The tranformation is done by configuring Smooks and performing two transformation, one transformation from CSV to an intermediate xml format, and a second transformation from the intermediate xml format to the target xml.</description>
		<size>18354</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example/transform_CSV2XML_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.43</property>
				<property name="eclipse-projects">transform_CSV2XML,transform_CSV2XML_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 4.3.0 and the runtime name should be "jboss-soa-p.4.3.0 Runtime"</property>
			</fix>
		</fixes>
	</project>

	<project>
		<category>ESB for JBoss Enterprise SOA Platform 4.3</category>
		<name>transform_XML2POJO</name>
		<included-projects>transform_XML2POJO,transform_XML2POJO_client </included-projects>		
		<shortDescription>JBoss ESB Smooks XML->POJO Example</shortDescription>

		<description>NOTE: Before import this example, please make sure that there is a runtime named "jboss-soa-p.4.3.0 Runtime" in the workspace.
		The purpose of the simple_transformation sample is to illustrate the
use of Smooks performing a simple transformation by converting a XML file into
Java POJOs.</description>
		<size>33104</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example/transform_XML2POJO_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.43</property>
				<property name="eclipse-projects">transform_XML2POJO,transform_XML2POJO_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 4.3.0 and the runtime name should be "jboss-soa-p.4.3.0 Runtime"</property>
			</fix>
		</fixes>
	</project>

	<project>
		<category>ESB for JBoss Enterprise SOA Platform 4.3</category>
		<name>transform_XML2XML_date_manipulation</name>
		<included-projects>transform_XML2XML_date_manipulation,transform_XML2XML_date_manipulation_client </included-projects>
		<shortDescription>JBoss ESB Smooks XML->XML date-manipulation Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is a runtime named "jboss-soa-p.4.3.0 Runtime" in the workspace.
		This is another simple sample of how to manually define and apply a Message
  Transformation within JBoss ESB.  

  This sample is an extension of the "transformation_XML2XML_simple"
  Quickstart, demonstrating how  JBoss ESB Transformations can simplify your
  XSLT transformations by combining the power of XSLT with Java.  In this
  Quickstart, we use Java to perform the ugly string manipulation on the
  SampleOrder date field (see OrderDate.java) and use XSLT for what it's good at
  i.e. Templating.  Again, the transformed SampleOrder.xml message is just
  printed to the Java console (message before and after).</description>

		<size>20313</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example/transform_XML2XML_date_manipulation_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.43</property>
				<property name="eclipse-projects">transform_XML2XML_date_manipulation,transform_XML2XML_date_manipulation_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 4.3.0 and the runtime name should be "jboss-soa-p.4.3.0 Runtime"</property>
			</fix>
		</fixes>
	</project>

	<project>
		<category>ESB for JBoss Enterprise SOA Platform 4.3</category>
		<name>transform_XML2XML_simple</name>
		<included-projects>transform_XML2XML_simple,transform_XML2XML_simple_client </included-projects>		
		<shortDescription>JBoss ESB Smooks XML->XML Example</shortDescription>
		<description>NOTE: Before import this example, please make sure that there is a runtime named "jboss-soa-p.4.3.0 Runtime" in the workspace.
		This is a very basic sample of how to manually define and apply a Message
  Transformation within JBoss ESB.  It applies a very simple XSLT to a
  SampleOrder.xml message and prints the before and after XML to the console.</description>
		<size>18168</size>

		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/Denny/esb-example/transform_XML2XML_simple_all.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.eap.43</property>
				<property name="eclipse-projects">transform_XML2XML_simple, transform_XML2XML_simple_client</property>
				<property name="required-components">esb</property>
				<property name="description">This project example requires the JBoss Enterprise SOA Platform 4.3.0 and the runtime name should be "jboss-soa-p.4.3.0 Runtime"</property>
			</fix>
		</fixes>
	</project>
	
	<project>
		<category>Richfaces 4.0/JSF 2.0</category>
		<name>richfaces-simpleapp</name>
		<included-projects>richfaces-simpleapp</included-projects>
		<shortDescription>RichFaces 4.0 Simple Application</shortDescription>
		<description>This example creates a simple RichFaces 4.0 Application. It requires JBoss Application Server 6.0 and m2eclipse.
It includes the richfaces-simpleapp project.
</description>
		<size>9046</size>
		<url>
			http://anonsvn.jboss.org/repos/jbosstools/workspace/snjeza/richfaces-examples/richfaces-simpleapp.zip
		</url>
		<fixes>
			<fix type="wtpruntime">
				<property name="allowed-types">org.jboss.ide.eclipse.as.runtime.60</property>
				<property name="eclipse-projects">richfaces-simpleapp</property>
				<property name="description">This project example requires the JBoss Application Server 6.0</property>
			</fix>
			
			<fix type="plugin">
				<property name="id">org.maven.ide.eclipse.wtp</property>
				<property name="versions">0.10.0, 0.11.0,0.12.0</property>
				<property name="description">The m2eclipse-wtp plugin is required. You can install it using the following update sites: http://m2eclipse.sonatype.org/sites/m2e/ and http://m2eclipse.sonatype.org/sites/m2e-extras/</property>
			</fix>
		</fixes>
	</project>
	
</projects>
